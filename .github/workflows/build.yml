name: Build and Release WASM

on:
  push:
    branches: [main]
  release:
    types: [created]

jobs:
  build-wasm:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install wasm-pack
      run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

    - name: Install rust
      run: rustup target add wasm32-unknown-unknown

    - name: Get version
      id: get_version
      run: |
        cd quillion-wasm
        VERSION=$(grep '^version' Cargo.toml | head -1 | cut -d '"' -f 2)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Build
      run: |
        cd quillion-wasm
        wasm-pack build --target web --release

    - name: Upload 
      uses: actions/upload-artifact@v4
      with:
        name: wasm-package-${{ steps.get_version.outputs.version }}
        path: |
          quillion-wasm/pkg/
          quillion-wasm/Cargo.toml

  create-release:
    runs-on: ubuntu-latest
    needs: build-wasm
    if: github.event_name == 'release'
    
    steps:
    - name: Download
      uses: actions/download-artifact@v4
      with:
        name: wasm-package-${{ needs.build-wasm.outputs.version }}
        path: wasm-package

    - name: Get version
      id: get_version
      run: |
        VERSION=$(grep '^version' wasm-package/Cargo.toml | head -1 | cut -d '"' -f 2)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: wasm-package/pkg/*
        tag_name: v${{ steps.get_version.outputs.version }}
        name: Release v${{ steps.get_version.outputs.version }}
        body: |
          WASM build for Q
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}